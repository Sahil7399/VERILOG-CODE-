odule synfifo(
  input clk,
  input rst_n,
  input wr_en_i,
  input rd_en_i,
  input [7:0] data_i,
  output reg [7:0] data_o,
  output reg full,
  output reg empty 
 
  
);

parameter DEPTH = 8;

reg [7:0] mem [0:DEPTH -1];
reg [3:0] count ;
reg wr_ptr,rd_ptr;
//parameter read_ptr = 8;
assign full_o =  (count == DEPTH) ;
assign empty_o = (count == 0) ;

// Write operation

always @(posedge clk or negedge rst_n)
begin 
if(!rst_n)
	wr_ptr <= 3'd 0 ;
else
	begin
		if(wr_en_i == 1)
			begin
				mem[wr_ptr] <= data_i ;
				wr_ptr <= wr_ptr + 1 ; 
			end		
	end
end

// Read Operation 

always @(posedge clk or negedge rst_n)
begin 
if(!rst_n)
	rd_ptr <= 3'd 0 ;
else
	begin
		if(rd_en_i == 1)
			begin
				data_o <= mem[rd_ptr] ;
				rd_ptr <= rd_ptr + 1 ; 
			end		
	end
end

//Count 

always @(posedge clk or negedge rst_n)
begin 
if(!rst_n)
	count <= 4'd 0 ;
else
	begin
		case({wr_en_i,rd_en_i})							  	
			2'b00   : count <= count     ;  
         2'b01   : count <= count - 1 ;
			2'b10   : count <= count + 1 ;
			2'b11   : count <= count     ;	
			default : count <= count     ; 		
			endcase		
	end
end
endmodule   
